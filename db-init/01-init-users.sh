set -euo pipefail

: "${POSTGRES_DB:?}"
: "${POSTGRES_USER:?}"
: "${APP_DB_USER:?}"
: "${APP_DB_PASSWORD:?}"

psql -U "$POSTGRES_USER" -d "$POSTGRES_DB" <<SQL
DO \$\$
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = '$APP_DB_USER') THEN
    CREATE ROLE $APP_DB_USER LOGIN PASSWORD '$APP_DB_PASSWORD'
      NOSUPERUSER NOCREATEDB NOCREATEROLE NOREPLICATION;
  ELSE
    ALTER ROLE $APP_DB_USER WITH LOGIN PASSWORD '$APP_DB_PASSWORD'
      NOSUPERUSER NOCREATEDB NOCREATEROLE NOREPLICATION;
  END IF;
END\$\$;

GRANT CONNECT ON DATABASE "$POSTGRES_DB" TO $APP_DB_USER;
GRANT USAGE ON SCHEMA public TO $APP_DB_USER;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO $APP_DB_USER;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO $APP_DB_USER;

ALTER DEFAULT PRIVILEGES FOR ROLE $POSTGRES_USER IN SCHEMA public
  GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO $APP_DB_USER;
ALTER DEFAULT PRIVILEGES FOR ROLE $POSTGRES_USER IN SCHEMA public
  GRANT USAGE, SELECT ON SEQUENCES TO $APP_DB_USER;

-- (Optionnel) le schÃ©ma public appartient aux migrations
ALTER SCHEMA public OWNER TO $POSTGRES_USER;
SQL

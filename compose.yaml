services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${CONTAINER_NAME:-homecyclhome_api}-app
    # Expose the FPM port
    ports:
      - "127.0.0.1:${API_FPM_PORT:-9001}:9000"
    env_file:
      - .env
    environment:
      APP_ENV: ${APP_ENV:-prod}
      APP_DEBUG: ${APP_DEBUG:-0}
      APP_SECRET: ${APP_SECRET}
      APP_TIMEZONE: ${APP_TIMEZONE:-Europe/Paris}
      CORS_ALLOW_ORIGIN: ${CORS_ALLOW_ORIGIN:-https://*.homecyclhome.site}
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}
      JWT_PASSPHRASE: ${JWT_PASSPHRASE}
      RUN_MIGRATIONS: ${RUN_MIGRATIONS:-1}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - var_data:/var/www/html/var
      - ./config/jwt:/var/www/html/config/jwt
      #- uploads_data:/var/www/html/public/uploads
      - /srv/homecyclhome/uploads:/var/www/html/public/uploads
    healthcheck:
      test: ["CMD-SHELL", "php -v >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - backend

  db:
    image: postgres:17.5-bookworm
    container_name: ${CONTAINER_NAME:-homecyclhome_api}-db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1 -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - backend
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ${CONTAINER_NAME:-homecyclhome_api}-pgadmin
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-change-me}
    ports:
      - "127.0.0.1:${PGADMIN_PORT:-5050}:80"
    depends_on:
      - db
    networks:
      - backend
    restart: unless-stopped

volumes:
  db_data:
  var_data:
  #uploads_data:

networks:
  backend:
    driver: bridge
    internal: false
